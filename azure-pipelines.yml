# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
    $HOME/.poetry/bin/poetry config settings.virtualenvs.create false
  displayName: 'Install Poetry'

- script: |
    $HOME/.poetry/bin/poetry install
  displayName: 'Install dependencies'

- script: |
    pytest tests/ --junit-xml="$BUILD_STAGINGDIRECTORY/test-results.xml" --cov aiospamc --cov-report="xml:$BUILD_STAGINGDIRECTORY/coverage.xml"
  displayName: 'pytest'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: junit
    testResultsFiles: test-results.xml
    searchFolder: $(Build.StagingDirectory)

- task: PublishCodeCoverageResults@1
  condition: succeededOrFailed()
  inputs:
    codeCoverageTools: cobertura
    summaryFileLocation: $(Build.StagingDirectory)/coverage.xml
